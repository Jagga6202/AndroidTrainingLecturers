                  Date 25th February



ViewPager
ViewPager in Android is a class that allows the user to flip left and right through pages of data. This class provides the functionality to flip pages in app.

ViewPager with Image

Activity layout

<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <android.support.v4.view.ViewPager
        android:id="@+id/viewpager"
        android:layout_width="match_parent"
        android:layout_height="match_parent" />

</RelativeLayout>

Activity Code

public class MainActivity extends AppCompatActivity {
ViewPager viewPager;
    private ArrayList<Integer> ImagesArray = new ArrayList<Integer>();
    ViewExAdapter adapter;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        viewPager=(ViewPager)findViewById(R.id.viewpager);
        ImagesArray.add(R.drawable.one);
        ImagesArray.add(R.drawable.two);
        ImagesArray.add(R.drawable.three);
        ImagesArray.add(R.drawable.five);
        adapter=new ViewExAdapter(this,ImagesArray);
        viewPager.setAdapter(adapter);
    }
}

single item View layout

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android" android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical">
    <ImageView
        android:id="@+id/imageview"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:scaleType="fitXY"
        android:src="@mipmap/ic_launcher"/>

</LinearLayout>

Adapter 

public class ViewExAdapter extends PagerAdapter {
    private ArrayList<Integer> IMAGES;
    private Context context;

    public ViewExAdapter(Context context,ArrayList<Integer> IMAGES) {
        this.IMAGES = IMAGES;
        this.context = context;
    }

    @Override
    public int getCount() {
        return IMAGES.size();
    }

    @NonNull
    @Override
    public Object instantiateItem(@NonNull ViewGroup container, int position) {
        View view=LayoutInflater.
from(context).inflate(R.layout.pageritems,container,false);
        ImageView imageView=(ImageView)view.findViewById(R.id.imageview);
        imageView.setImageResource(IMAGES.get(position));
        container.addView(view,0);
        return view;
    }

    @Override
    public boolean isViewFromObject(@NonNull View view, @NonNull Object o) {
       return view.equals(o);
    }

    @Override
    public void destroyItem(ViewGroup container, int position, Object object) {
        container.removeView((View) object);
    }
}

ViewPager with Fragments

we will create two fragment or more 

mainactivity layout

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".Main2Activity">
    <android.support.v4.view.ViewPager
        android:id="@+id/viewPager"
        android:layout_width="match_parent"
        android:layout_height="match_parent"></android.support.v4.view.ViewPager>

</LinearLayout>

Mainactivity code


public class Main2Activity extends AppCompatActivity {
ArrayList<Fragment> arrayList;
ViewFragAdapter adapter;
ViewPager viewPager;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main2);
        viewPager=(ViewPager)findViewById(R.id.viewPager);
        arrayList=new ArrayList<>();
        arrayList.add(new OneFragment());
        arrayList.add(new TwoFragment());
        adapter=new ViewFragAdapter(getSupportFragmentManager(),this,arrayList);
        viewPager.setAdapter(adapter);


    }
}


Adapter code

public class ViewFragAdapter extends FragmentPagerAdapter {

    ArrayList<Fragment> arrayList;
    Context context;

    public ViewFragAdapter(FragmentManager fm,Context context,ArrayList<Fragment> arrayList) {
        super(fm);
        this.context=context;
        this.arrayList=arrayList;

    }

    @Override
    public Fragment getItem(int i) {
                return arrayList.get(i);
    }

    @Override
    public int getCount() {
        return arrayList.size();
    }
}














